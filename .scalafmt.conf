version = "3.10.0"

runner.dialect = scala3
maxColumn = 120
lineEndings = unix

# Newlines
newlines.penalizeSingleSelectMultiArgList = false
newlines.topLevelStatementBlankLines = [
  { blanks { before = 1, after = 0 } }
]

# Docstring: compatta e non andare troppo a capo
docstrings.style = Asterisk
docstrings.wrap = fold
docstrings.wrapMaxColumn = 120

# Commenti: non wrappare
comments.wrap = no

# Project
project.git = true
project.excludeFilters = [
  "build/",
  "build.sbt",
  "project/",                       # escludi file di build
  "src/test/scala/io/github/srs/model/dsl/",
  "src/test/scala/io/github/srs/performance/",
  "src/test/scala/io/github/srs/system/",
]

# Indent
indent.main = 2

# Alignment
align.openParenCallSite = false
align.preset = none
align.openParenDefnSite = false

# Rewrite
rewrite.rules = [SortModifiers, PreferCurlyFors, Imports]
rewrite.imports.sort = scalastyle
rewrite.sortModifiers.order = [
  "implicit", "private", "sealed", "abstract",
  "override", "final", "protected", "lazy",
]
rewrite.scala3.convertToNewSyntax = true
rewrite.scala3.removeOptionalBraces = oldSyntaxToo

# Niente end marker, e rimuovi quelli presenti
rewrite.scala3.insertEndMarkerMinLines = 0
rewrite.scala3.removeEndMarkerMaxLines = 10000
rewrite.scala3.countEndMarkerLines = all

# Space
spaces.inImportCurlyBraces = true

# Commas
trailingCommas = always

# Select chains
includeCurlyBraceInSelectChains = false

fileOverride {
  "glob:project/**" {
    runner.dialect = scala213
  }
}
